syntax = "proto3";

option go_package = "github.com/Karlo2001/Replication";

package main;

// protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative Proto/Auction.proto   

service Auction {
    rpc Bid(BidRequest) returns (Ack) {}
    rpc Result(Empty) returns (Outcome) {};
	rpc VoteForMe(ServerInfo) returns (Ack) {}
	rpc NewLeader(ServerInfo) returns (Ack) {}
	rpc Update(UpdateMessage) returns (Ack) {}
}

message BidRequest {
	string name = 1;
	int32 timestamp = 2;
	int32 bid = 3;
}

message Outcome {
	bool ended = 1;
	string name = 2;
	int32 timestamp = 3;
	int32 highestBid = 4;
}

message Ack {
	int32 ack = 1;
	int32 timestamp = 2;
}

message ServerInfo {
	int32 id = 1;
	int32 timestamp = 2;
}

message UpdateMessage {
	string highestBidName = 1;
	int32 timestamp = 2;
	int32 highestBid = 3;
	repeated int32 allBids = 4;
	repeated string allBiddersNames = 5;
	bool ping = 6;
}

message Empty {}